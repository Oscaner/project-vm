---
# Available `vagrant_box` see: https://app.vagrantup.com/boxes/search
vagrant_box: generic/ubuntu2010

# If you need to run multiple instances of Project VM, set a unique hostname,
# machine name, and IP address for each instance.
vagrant_hostname: projectvm.test
vagrant_machine_name: projectvm
vagrant_ip: 192.168.88.88
vagrant_public_ip: ""
vagrant_user: vagrant

vagrant_gui: false
vagrant_memory: 2048
vagrant_cpus: 1

# Settings for project.
# The project_mode can be 'php-webserver'.
project_mode: 'php-webserver'
# The project_type can be 'yii2'.
project_type: 'yii2'
project_domain: "{{ vagrant_hostname }}"
project_deploy_dir: "/var/www/projectvm"
# The database system to use. Can be either 'mysql' or 'pgsql'.
project_db_backend: 'mysql'
project_db_user: project
project_db_password: project
project_db_name: project
project_db_host: localhost
# The dashboard of project_mode with 'php-webserser'.
php_webserver_dashboard_install_dir: /var/www/dashboard

# Minimum required versions.
project_vagrant_version_min: '2.2.0'
project_ansible_version_min: '2.8'

# Ensure vagrant plugins are installed.
vagrant_plugins:
  - name: vagrant-vbguest
  - name: vagrant-hostsupdater

# A list of synced folders, with the keys 'local_path', 'destination', and
# a 'type' of [nfs|rsync|smb] (leave empty for slow native shares).
vagrant_synced_folders:
  # The first synced folder will be used for the default Project installation, if
  # any of the build_* settings are 'true'. By default the folder is set to
  # the project-vm folder.
  - local_path: .
    destination: {{ project_deploy_dir }}
    type: nfs
    create: true

vagrant_synced_folder_default_type: nfs

# Force use of ansible_local provisioner, even if Ansible is installed on host.
force_ansible_local: false

ansible_python_interpreter: python3

# Automatically fix timeout issues with NFS on macOS. See
# https://github.com/geerlingguy/drupal-vm/issues/2154
vagrant_nfs_fix_enabled: false
vagrant_nfs_fix_keepalive_file: "/vagrant/tmp/.vagrant-nfs-fix-keepalive.tmp"

# The web server software to use. Can be either 'apache' or 'nginx'.
project_webserver: apache

# Helper variable to configure the PHP-FPM connection for each Apache
# VirtualHost in the `apache_vhosts` list.
apache_vhost_php_fpm_parameters: |
    <FilesMatch \.php$>
      SetHandler "proxy:fcgi://{{ php_fpm_listen }}"
    </FilesMatch>

# Apache VirtualHosts. Add one for each site you are running inside the VM. For
# multisite deployments, you can point multiple servernames at one documentroot.
# View the geerlingguy.apache Ansible Role README for more options.
apache_vhosts:
  - servername: "{{ project_domain }}"
    serveralias: "www.{{ project_domain }}"
    documentroot: "{{ project_deploy_dir }}"
    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

  # The dashboard of project_mode with 'php-webserser'.
  - servername: "{{ vagrant_ip }}"
    serveralias: "dashboard.{{ vagrant_hostname }}"
    documentroot: "{{ php_webserver_dashboard_install_dir }}"
    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

apache_packages_state: latest
apache_remove_default_vhost: true
apache_mods_enabled:
  - expires.load
  - headers.load
  - ssl.load
  - rewrite.load
  - proxy.load
  - proxy_fcgi.load

# Nginx hosts. Each site will get a server entry using the configuration defined
# here. Set the 'is_php' property for document roots that contain PHP apps like
# Drupal.
nginx_hosts:
  - server_name: "{{ project_domain }} www.{{ project_domain }}"
    root: "{{ project_deploy_dir }}"
    is_php: true

  # The dashboard of project_mode with 'php-webserser'.
  - server_name: "{{ vagrant_ip }} dashboard.{{ vagrant_hostname }}"
    root: "{{ php_webserver_dashboard_install_dir }}"
    is_php: true

nginx_remove_default_vhost: true
nginx_ppa_use: true
# Use nginx_vhost_template to define nginx.conf.
# nginx_vhost_template: "templates/nginx-vhost.conf.j2"

# MySQL databases and users.
mysql_databases:
  - name: "{{ project_db_name }}"
    encoding: utf8mb4
    collation: utf8mb4_general_ci

mysql_users:
  - name: "{{ project_db_user }}"
    host: "%"
    password: "{{ project_db_password }}"
    priv: "{{ project_db_name }}.*:ALL"

# MySQL Configuration.
mysql_root_password: root
mysql_slow_query_log_enabled: true
mysql_slow_query_time: 2
mysql_wait_timeout: 300

# PostgreSQL databases and users.
postgresql_users:
  - name: "{{ project_db_user }}"
    password: "{{ project_db_password }}"

postgresql_databases:
  - name: "{{ project_db_name }}"
    owner: "{{ project_db_user }}"
